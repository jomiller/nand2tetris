// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM512[address(t)](t)
 *     Write: If load(t-1) then RAM512[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[6..8], a=dout0, b=dout1, c=dout2, d=dout3, e=dout4, f=dout5, g=dout6, h=dout7);
    RAM64(in=in, load=dout0, address=address[0..5], out=rout0);
    RAM64(in=in, load=dout1, address=address[0..5], out=rout1);
    RAM64(in=in, load=dout2, address=address[0..5], out=rout2);
    RAM64(in=in, load=dout3, address=address[0..5], out=rout3);
    RAM64(in=in, load=dout4, address=address[0..5], out=rout4);
    RAM64(in=in, load=dout5, address=address[0..5], out=rout5);
    RAM64(in=in, load=dout6, address=address[0..5], out=rout6);
    RAM64(in=in, load=dout7, address=address[0..5], out=rout7);
    Mux8Way16(a=rout0, b=rout1, c=rout2, d=rout3, e=rout4, f=rout5, g=rout6, h=rout7, sel=address[6..8], out=out);
}
